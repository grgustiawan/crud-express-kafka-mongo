version: '3.8'

services:
  mongo-galih1:
    image: mongo:latest
    container_name: mongo-galih1
    ports:
      - "27017:27017"
    networks:
      - jenius_cluster
    volumes:
      - mongo-galih1-data:/data/db
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo-galih1
    environment:
      MONGODB_INITDB_ROOT_USERNAME: galih
      MONGODB_INITDB_ROOT_PASSWORD: galih123

  mongo-galih2:
    image: mongo:latest
    container_name: mongo-galih2
    ports:
      - "27018:27017"
    networks:
      - jenius_cluster
    volumes:
      - mongo-galih2-data:/data/db
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo-galih2
    environment:
      MONGODB_INITDB_ROOT_USERNAME: galih
      MONGODB_INITDB_ROOT_PASSWORD: galih123
  
  zookeeper:
    container_name: zookeeper-container
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - jenius_cluster

  kafka:
    container_name: kafka-container
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenius_cluster

networks:
  jenius_cluster:
    driver: bridge

volumes:
  mongo-galih1-data:
    driver: local
  mongo-galih2-data:
    driver: local
  mongo-galih3-data:
    driver: local